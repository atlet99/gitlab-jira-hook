openapi: 3.1.0
info:
  title: GitLab â†” Jira Cloud Webhook API
  description: |
    A lightweight Go webhook server that connects GitLab System Hooks and Project Webhooks with Jira Cloud.
    Automatically posts commit, merge request, and other GitLab activity to corresponding Jira issues.
    
    ## Features
    - **GitLab Integration**: System Hooks and Project Webhooks support
    - **Jira Cloud API v3.0**: Rich comments with ADF (Atlassian Document Format)
    - **Advanced Monitoring**: Prometheus metrics, distributed tracing, health checks
    - **Error Recovery**: Multiple recovery strategies with automatic failover
    - **Performance**: Advanced caching, rate limiting, and async processing
    - **Security**: SHA-256 hashing, input validation, Slowloris protection
  version: 0.1.5
  contact:
    name: GitLab Jira Hook Support
    url: https://github.com/atlet99/gitlab-jira-hook
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8080
    description: Development server
  - url: https://yourdomain.com
    description: Production server

paths:
  /gitlab-hook:
    post:
      summary: GitLab System Hook endpoint
      description: |
        Handles GitLab System Hook events. Validates the webhook signature and processes
        various GitLab events to create comments in Jira issues.
        
        **Authentication Methods:**
        - HMAC-SHA256: Using X-Gitlab-Token header (traditional webhooks)
        - JWT: Using Authorization: Bearer header (Jira Connect apps)
        
        **Features:**
        - Rate limiting with adaptive algorithms
        - Request tracing with OpenTelemetry
        - Error recovery with multiple strategies
        - Comprehensive metrics collection
      tags:
        - System Hooks
      security:
        - GitLabToken: []
        - JiraConnectToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/PushEvent'
                - $ref: '#/components/schemas/MergeRequestEvent'
                - $ref: '#/components/schemas/ProjectEvent'
                - $ref: '#/components/schemas/UserEvent'
                - $ref: '#/components/schemas/GroupEvent'
                - $ref: '#/components/schemas/RepositoryEvent'
                - $ref: '#/components/schemas/TagPushEvent'
                - $ref: '#/components/schemas/ReleaseEvent'
                - $ref: '#/components/schemas/DeploymentEvent'
                - $ref: '#/components/schemas/FeatureFlagEvent'
                - $ref: '#/components/schemas/WikiPageEvent'
                - $ref: '#/components/schemas/PipelineEvent'
                - $ref: '#/components/schemas/BuildEvent'
                - $ref: '#/components/schemas/NoteEvent'
                - $ref: '#/components/schemas/IssueEvent'
                - $ref: '#/components/schemas/ConfidentialNoteEvent'
                - $ref: '#/components/schemas/ConfidentialIssueEvent'
                - $ref: '#/components/schemas/SubgroupEvent'
                - $ref: '#/components/schemas/SnippetEvent'
                - $ref: '#/components/schemas/ProjectRenameEvent'
                - $ref: '#/components/schemas/ProjectTransferEvent'
                - $ref: '#/components/schemas/UserUpdateEvent'
                - $ref: '#/components/schemas/GroupRenameEvent'
                - $ref: '#/components/schemas/KeyCreateEvent'
                - $ref: '#/components/schemas/KeyDestroyEvent'
                - $ref: '#/components/schemas/GroupMemberAddEvent'
                - $ref: '#/components/schemas/GroupMemberRemoveEvent'
            examples:
              push_event:
                summary: Push Event
                value:
                  event_name: "push"
                  ref: "refs/heads/main"
                  commits:
                    - id: "abc123"
                      message: "Fix login issue ABC-123"
                      author:
                        name: "John Doe"
                        email: "john@example.com"
                      url: "https://gitlab.com/project/commit/abc123"
                      timestamp: "2024-01-01T12:00:00Z"
                  project:
                    name: "My Project"
                    web_url: "https://gitlab.com/project"
              merge_request_event:
                summary: Merge Request Event
                value:
                  event_name: "merge_request"
                  object_attributes:
                    id: 123
                    title: "Implement user authentication ABC-123"
                    description: "This fixes ABC-123 requirements"
                    state: "opened"
                    action: "open"
                    source_branch: "feature/auth"
                    target_branch: "main"
                    url: "https://gitlab.com/project/merge_requests/123"
                  project:
                    name: "My Project"
                    web_url: "https://gitlab.com/project"
      responses:
        '200':
          description: Event processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Bad request - invalid event data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too many requests - rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /project-hook:
    post:
      summary: GitLab Project Webhook endpoint
      description: |
        Handles GitLab Project Webhook events. Validates the webhook signature and processes
        various project events to create comments in Jira issues.
        
        **Authentication Methods:**
        - HMAC-SHA256: Using X-Gitlab-Token header (traditional webhooks)
        - JWT: Using Authorization: Bearer header (Jira Connect apps)
        
        **Features:**
        - Rate limiting with adaptive algorithms
        - Request tracing with OpenTelemetry
        - Error recovery with multiple strategies
        - Comprehensive metrics collection
      tags:
        - Project Webhooks
      security:
        - GitLabToken: []
        - JiraConnectToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/ProjectPushEvent'
                - $ref: '#/components/schemas/ProjectMergeRequestEvent'
                - $ref: '#/components/schemas/ProjectIssueEvent'
                - $ref: '#/components/schemas/ProjectNoteEvent'
                - $ref: '#/components/schemas/ProjectPipelineEvent'
                - $ref: '#/components/schemas/ProjectBuildEvent'
                - $ref: '#/components/schemas/ProjectTagPushEvent'
                - $ref: '#/components/schemas/ProjectReleaseEvent'
                - $ref: '#/components/schemas/ProjectDeploymentEvent'
                - $ref: '#/components/schemas/ProjectFeatureFlagEvent'
                - $ref: '#/components/schemas/ProjectWikiPageEvent'
                - $ref: '#/components/schemas/ProjectConfidentialNoteEvent'
                - $ref: '#/components/schemas/ProjectConfidentialIssueEvent'
                - $ref: '#/components/schemas/ProjectSubgroupEvent'
                - $ref: '#/components/schemas/ProjectSnippetEvent'
                - $ref: '#/components/schemas/ProjectRenameEvent'
                - $ref: '#/components/schemas/ProjectTransferEvent'
                - $ref: '#/components/schemas/UserUpdateEvent'
                - $ref: '#/components/schemas/GroupRenameEvent'
                - $ref: '#/components/schemas/KeyCreateEvent'
                - $ref: '#/components/schemas/KeyDestroyEvent'
                - $ref: '#/components/schemas/GroupMemberAddEvent'
                - $ref: '#/components/schemas/GroupMemberRemoveEvent'
            examples:
              project_push_event:
                summary: Project Push Event
                value:
                  object_kind: "push"
                  ref: "refs/heads/main"
                  commits:
                    - id: "abc123"
                      message: "Fix login issue ABC-123"
                      author:
                        name: "John Doe"
                        email: "john@example.com"
                      url: "https://gitlab.com/project/commit/abc123"
                      timestamp: "2024-01-01T12:00:00Z"
                  project:
                    name: "My Project"
                    web_url: "https://gitlab.com/project"
              project_issue_event:
                summary: Project Issue Event
                value:
                  object_kind: "issue"
                  object_attributes:
                    id: 456
                    title: "Bug related to ABC-123"
                    description: "This issue is related to ABC-123"
                    state: "opened"
                    action: "open"
                    issue_type: "issue"
                    priority: "medium"
                    url: "https://gitlab.com/project/issues/456"
                  project:
                    name: "My Project"
                    web_url: "https://gitlab.com/project"
      responses:
        '200':
          description: Event processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Bad request - invalid event data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too many requests - rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /health:
    get:
      summary: Health check endpoint
      description: |
        Returns comprehensive health status of the webhook server with detailed component information.
        
        **Health Levels:**
        - `healthy` - All components are functioning normally
        - `degraded` - Some components have issues but service is operational
        - `unhealthy` - Critical components are failing
        - `critical` - Service is not operational
        
        **Components Monitored:**
        - HTTP server status
        - Database connectivity (if applicable)
        - External service dependencies
        - Cache system status
        - Worker pool health
        - Error recovery system
      tags:
        - Health & Monitoring
      responses:
        '200':
          description: Service health status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
        '503':
          description: Service unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /ready:
    get:
      summary: Readiness check endpoint
      description: |
        Returns service readiness status for Kubernetes health checks.
        Indicates whether the service is ready to receive traffic.
        
        **Readiness Criteria:**
        - All required components initialized
        - Database connections established
        - External service dependencies available
        - Configuration loaded successfully
      tags:
        - Health & Monitoring
      responses:
        '200':
          description: Service is ready
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadinessResponse'
        '503':
          description: Service is not ready
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadinessResponse'

  /metrics:
    get:
      summary: Prometheus metrics endpoint
      description: |
        Returns Prometheus metrics for monitoring and alerting.
        
        **Available Metrics:**
        - HTTP request counts and durations
        - Job processing metrics (queue length, processing time)
        - Cache performance (hit rate, eviction count)
        - Rate limiting statistics
        - System metrics (memory, goroutines, GC)
        - Error rates and recovery attempts
        - Custom business metrics
      tags:
        - Health & Monitoring
      responses:
        '200':
          description: Prometheus metrics
          content:
            text/plain:
              schema:
                type: string
                example: |
                  # HELP webhook_requests_total Total number of webhook requests
                  # TYPE webhook_requests_total counter
                  webhook_requests_total{endpoint="/gitlab-hook",status="200"} 150
                  webhook_requests_total{endpoint="/gitlab-hook",status="400"} 2
                  
                  # HELP job_processing_duration_seconds Time spent processing jobs
                  # TYPE job_processing_duration_seconds histogram
                  job_processing_duration_seconds_bucket{priority="high",le="0.1"} 45
                  job_processing_duration_seconds_bucket{priority="high",le="0.5"} 89
                  
                  # HELP cache_hit_rate Cache hit rate percentage
                  # TYPE cache_hit_rate gauge
                  cache_hit_rate 85.5
                  
                  # HELP rate_limit_requests_total Total rate limited requests
                  # TYPE rate_limit_requests_total counter
                  rate_limit_requests_total{endpoint="/gitlab-hook"} 5

  /cache/status:
    get:
      summary: Cache status endpoint
      description: |
        Returns detailed cache system status and statistics.
        
        **Cache Information:**
        - Cache hit/miss rates
        - Memory usage and eviction statistics
        - Cache strategy performance
        - Compression and encryption status
        - Distributed cache node information
      tags:
        - Cache Management
      responses:
        '200':
          description: Cache status information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheStatusResponse'

  /cache/clear:
    post:
      summary: Clear cache endpoint
      description: |
        Clears all cache entries. Useful for troubleshooting and performance testing.
        
        **Security:** Requires authentication in production environments.
      tags:
        - Cache Management
      security:
        - AdminToken: []
      responses:
        '200':
          description: Cache cleared successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  message:
                    type: string
                    example: "Cache cleared successfully"
                  cleared_entries:
                    type: integer
                    example: 1250
        '401':
          description: Unauthorized - requires admin token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /config/reload:
    post:
      summary: Reload configuration endpoint
      description: |
        Triggers configuration reload from files and environment variables.
        Useful for applying configuration changes without service restart.
        
        **Security:** Requires authentication in production environments.
      tags:
        - Configuration Management
      security:
        - AdminToken: []
      responses:
        '200':
          description: Configuration reloaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  message:
                    type: string
                    example: "Configuration reloaded successfully"
                  reloaded_at:
                    type: string
                    format: date-time
                    example: "2024-01-01T12:00:00Z"
        '401':
          description: Unauthorized - requires admin token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Configuration reload failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /performance:
    get:
      summary: Get current performance metrics
      description: |
        Returns real-time performance score and metrics.
        
        **Performance Score (0-100):**
        - Based on response time, error rate, throughput, and memory usage
        - Target compliance tracking
        - Automatic alerting thresholds
      tags:
        - Performance Monitoring
      responses:
        '200':
          description: Current performance metrics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceMetrics'
        '500':
          description: Error retrieving performance metrics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /performance/history:
    get:
      summary: Get performance history
      description: |
        Returns historical performance data for trend analysis.
        
        **Available Periods:**
        - hour: Last 60 minutes (1-minute intervals)
        - day: Last 24 hours (1-hour intervals)
        - week: Last 7 days (daily intervals)
        - month: Last 30 days (daily intervals)
      tags:
        - Performance Monitoring
      parameters:
        - name: period
          in: query
          schema:
            type: string
            enum: [hour, day, week, month]
            default: day
          description: Time period for history data
        - name: limit
          in: query
          schema:
            type: integer
            default: 100
          description: Maximum number of data points to return
      responses:
        '200':
          description: Performance history data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceHistory'
        '400':
          description: Invalid period parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /performance/targets:
    get:
      summary: Get performance targets
      description: |
        Returns configured performance targets and thresholds.
        
        **Target Metrics:**
        - Response time (ms)
        - Error rate (%)
        - Throughput (requests/sec)
        - Memory usage (MB)
        - Cache hit rate (%)
      tags:
        - Performance Monitoring
      responses:
        '200':
          description: Performance targets configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceTargets'
        '500':
          description: Error retrieving performance targets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /performance/reset:
    post:
      summary: Reset performance metrics
      description: |
        Resets all performance metrics to initial state.
        
        **Security:** Requires admin token in production environments.
      tags:
        - Performance Monitoring
      security:
        - AdminToken: []
      responses:
        '200':
          description: Performance metrics reset successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  message:
                    type: string
                    example: "Performance metrics reset"
                  reset_at:
                    type: string
                    format: date-time
                    example: "2024-01-01T12:00:00Z"
        '401':
          description: Unauthorized - requires admin token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    GitLabToken:
      type: apiKey
      name: X-Gitlab-Token
      in: header
      description: GitLab webhook secret token
    AdminToken:
      type: apiKey
      name: X-Admin-Token
      in: header
      description: Admin token for privileged operations
    JiraConnectToken:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token for Jira Connect apps authentication

  schemas:
    SuccessResponse:
      type: object
      properties:
        status:
          type: string
          enum: [success]
          example: "success"
        message:
          type: string
          example: "Event processed successfully"
        jira_comments_created:
          type: integer
          description: Number of Jira comments created
          example: 2
        processing_time_ms:
          type: integer
          description: Processing time in milliseconds
          example: 150
        trace_id:
          type: string
          description: OpenTelemetry trace ID for correlation
          example: "1-5759e988-bd862e3fe1be46a994272793"
      required:
        - status
        - message

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message
          example: "Invalid event data"
        code:
          type: string
          description: Error code
          example: "INVALID_EVENT"
        timestamp:
          type: string
          format: date-time
          description: Error timestamp
          example: "2024-01-01T12:00:00Z"
        trace_id:
          type: string
          description: OpenTelemetry trace ID for correlation
          example: "1-5759e988-bd862e3fe1be46a994272793"
        details:
          type: object
          description: Additional error details
          example:
            field: "event_name"
            value: "invalid_event"
      required:
        - error
        - timestamp

    RateLimitResponse:
      type: object
      properties:
        error:
          type: string
          example: "Rate limit exceeded"
        code:
          type: string
          example: "RATE_LIMIT_EXCEEDED"
        retry_after:
          type: integer
          description: Seconds to wait before retrying
          example: 60
        limit:
          type: integer
          description: Request limit per time window
          example: 100
        window:
          type: string
          description: Time window for rate limiting
          example: "1m"
        timestamp:
          type: string
          format: date-time
          example: "2024-01-01T12:00:00Z"
      required:
        - error
        - retry_after
        - timestamp

    HealthResponse:
      type: object
      properties:
        status:
          type: string
          enum: [healthy, degraded, unhealthy, critical]
          description: Overall health status
          example: "healthy"
        timestamp:
          type: string
          format: date-time
          description: Health check timestamp
          example: "2024-01-01T12:00:00Z"
        version:
          type: string
          description: Service version
          example: "0.1.5"
        uptime:
          type: string
          description: Service uptime
          example: "1h23m45s"
        components:
          type: object
          description: Individual component health status
          properties:
            http_server:
              $ref: '#/components/schemas/ComponentHealth'
            cache:
              $ref: '#/components/schemas/ComponentHealth'
            worker_pool:
              $ref: '#/components/schemas/ComponentHealth'
            error_recovery:
              $ref: '#/components/schemas/ComponentHealth'
            rate_limiter:
              $ref: '#/components/schemas/ComponentHealth'
        metrics:
          type: object
          description: Key performance metrics
          properties:
            request_rate:
              type: number
              description: Requests per second
              example: 15.5
            error_rate:
              type: number
              description: Error rate percentage
              example: 0.1
            cache_hit_rate:
              type: number
              description: Cache hit rate percentage
              example: 85.5
            avg_response_time:
              type: number
              description: Average response time in milliseconds
              example: 125.3
      required:
        - status
        - timestamp
        - version

    ComponentHealth:
      type: object
      properties:
        status:
          type: string
          enum: [healthy, degraded, unhealthy, critical]
          description: Component health status
        message:
          type: string
          description: Health status message
        last_check:
          type: string
          format: date-time
          description: Last health check timestamp
        details:
          type: object
          description: Component-specific health details
      required:
        - status
        - message

    ReadinessResponse:
      type: object
      properties:
        ready:
          type: boolean
          description: Whether the service is ready to receive traffic
          example: true
        timestamp:
          type: string
          format: date-time
          description: Readiness check timestamp
          example: "2024-01-01T12:00:00Z"
        checks:
          type: object
          description: Individual readiness checks
          properties:
            configuration:
              type: boolean
              description: Configuration loaded successfully
            database:
              type: boolean
              description: Database connections established
            external_services:
              type: boolean
              description: External service dependencies available
            cache:
              type: boolean
              description: Cache system initialized
        message:
          type: string
          description: Readiness status message
          example: "Service is ready to receive traffic"
      required:
        - ready
        - timestamp

    CacheStatusResponse:
      type: object
      properties:
        status:
          type: string
          enum: [enabled, disabled, degraded]
          description: Cache system status
        strategy:
          type: string
          enum: [LRU, LFU, FIFO, TTL, Adaptive]
          description: Current cache eviction strategy
        statistics:
          type: object
          properties:
            total_entries:
              type: integer
              description: Total number of cache entries
            hit_count:
              type: integer
              description: Total cache hits
            miss_count:
              type: integer
              description: Total cache misses
            hit_rate:
              type: number
              description: Cache hit rate percentage
            eviction_count:
              type: integer
              description: Total evictions
            memory_usage_bytes:
              type: integer
              description: Memory usage in bytes
        compression:
          type: object
          properties:
            enabled:
              type: boolean
              description: Whether compression is enabled
            compression_ratio:
              type: number
              description: Average compression ratio
        encryption:
          type: object
          properties:
            enabled:
              type: boolean
              description: Whether encryption is enabled
            algorithm:
              type: string
              description: Encryption algorithm used
        distributed:
          type: object
          properties:
            enabled:
              type: boolean
              description: Whether distributed caching is enabled
            nodes:
              type: integer
              description: Number of cache nodes
            consistent_hashing:
              type: boolean
              description: Whether consistent hashing is used
      required:
        - status
        - strategy
        - statistics

    PerformanceMetrics:
      type: object
      properties:
        score:
          type: number
          description: Overall performance score (0-100)
          example: 92.5
        timestamp:
          type: string
          format: date-time
          description: Metrics timestamp
          example: "2024-01-01T12:00:00Z"
        metrics:
          type: object
          properties:
            response_time:
              type: number
              description: Average response time in milliseconds
              example: 125.3
            error_rate:
              type: number
              description: Error rate percentage
              example: 0.1
            throughput:
              type: number
              description: Requests per second
              example: 15.5
            memory_usage:
              type: number
              description: Memory usage in MB
              example: 125.7
            cache_hit_rate:
              type: number
              description: Cache hit rate percentage
              example: 85.5
            worker_utilization:
              type: number
              description: Worker pool utilization percentage
              example: 65.2
        compliance:
          type: object
          properties:
            response_time:
              type: boolean
              description: Meets response time target
              example: true
            error_rate:
              type: boolean
              description: Meets error rate target
              example: true
            throughput:
              type: boolean
              description: Meets throughput target
              example: true
      required:
        - score
        - timestamp
        - metrics

    PerformanceHistory:
      type: object
      properties:
        period:
          type: string
          description: Time period for history data
          example: "day"
        interval:
          type: string
          description: Data interval
          example: "1h"
        data:
          type: array
          items:
            type: object
            properties:
              timestamp:
                type: string
                format: date-time
                example: "2024-01-01T12:00:00Z"
              score:
                type: number
                example: 92.5
              metrics:
                type: object
                properties:
                  response_time:
                    type: number
                    example: 125.3
                  error_rate:
                    type: number
                    example: 0.1
                  throughput:
                    type: number
                    example: 15.5
      required:
        - period
        - interval
        - data

    PerformanceTargets:
      type: object
      properties:
        response_time:
          type: number
          description: Target response time in milliseconds
          example: 200
        error_rate:
          type: number
          description: Target error rate percentage
          example: 0.5
        throughput:
          type: number
          description: Target throughput (requests/sec)
          example: 10
        memory_usage:
          type: number
          description: Target memory usage in MB
          example: 256
        cache_hit_rate:
          type: number
          description: Target cache hit rate percentage
          example: 80
        alert_thresholds:
          type: object
          properties:
            warning:
              type: number
              description: Warning threshold (score)
              example: 75
            critical:
              type: number
              description: Critical threshold (score)
              example: 50

    # System Hook Event Schemas
    PushEvent:
      type: object
      properties:
        event_name:
          type: string
          enum: [push]
        ref:
          type: string
          description: Git reference (e.g., refs/heads/main)
        commits:
          type: array
          items:
            $ref: '#/components/schemas/Commit'
        project:
          $ref: '#/components/schemas/Project'
      required:
        - event_name
        - ref
        - commits
        - project

    MergeRequestEvent:
      type: object
      properties:
        event_name:
          type: string
          enum: [merge_request]
        object_attributes:
          $ref: '#/components/schemas/MergeRequestAttributes'
        project:
          $ref: '#/components/schemas/Project'
      required:
        - event_name
        - object_attributes
        - project

    ProjectEvent:
      type: object
      properties:
        event_name:
          type: string
          enum: [project_create, project_update, project_destroy]
        project:
          $ref: '#/components/schemas/Project'
      required:
        - event_name
        - project

    UserEvent:
      type: object
      properties:
        event_name:
          type: string
          enum: [user_create, user_destroy]
        user:
          $ref: '#/components/schemas/User'
      required:
        - event_name
        - user

    GroupEvent:
      type: object
      properties:
        event_name:
          type: string
          enum: [group_create, group_destroy]
        group:
          $ref: '#/components/schemas/Group'
      required:
        - event_name
        - group

    RepositoryEvent:
      type: object
      properties:
        event_name:
          type: string
          enum: [repository_create, repository_destroy]
        project:
          $ref: '#/components/schemas/Project'
      required:
        - event_name
        - project

    TagPushEvent:
      type: object
      properties:
        event_name:
          type: string
          enum: [tag_push]
        ref:
          type: string
          description: Git reference (e.g., refs/tags/v1.0.0)
        commits:
          type: array
          items:
            $ref: '#/components/schemas/Commit'
        project:
          $ref: '#/components/schemas/Project'
      required:
        - event_name
        - ref
        - commits
        - project

    ReleaseEvent:
      type: object
      properties:
        event_name:
          type: string
          enum: [release]
        project:
          $ref: '#/components/schemas/Project'
        release:
          $ref: '#/components/schemas/Release'
      required:
        - event_name
        - project
        - release

    DeploymentEvent:
      type: object
      properties:
        event_name:
          type: string
          enum: [deployment]
        project:
          $ref: '#/components/schemas/Project'
        deployment:
          $ref: '#/components/schemas/Deployment'
      required:
        - event_name
        - project
        - deployment

    FeatureFlagEvent:
      type: object
      properties:
        event_name:
          type: string
          enum: [feature_flag]
        project:
          $ref: '#/components/schemas/Project'
        feature_flag:
          $ref: '#/components/schemas/FeatureFlag'
      required:
        - event_name
        - project
        - feature_flag

    WikiPageEvent:
      type: object
      properties:
        event_name:
          type: string
          enum: [wiki_page]
        project:
          $ref: '#/components/schemas/Project'
        wiki_page:
          $ref: '#/components/schemas/WikiPage'
      required:
        - event_name
        - project
        - wiki_page

    PipelineEvent:
      type: object
      properties:
        event_name:
          type: string
          enum: [pipeline]
        project:
          $ref: '#/components/schemas/Project'
        pipeline:
          $ref: '#/components/schemas/Pipeline'
      required:
        - event_name
        - project
        - pipeline

    BuildEvent:
      type: object
      properties:
        event_name:
          type: string
          enum: [build]
        project:
          $ref: '#/components/schemas/Project'
        build:
          $ref: '#/components/schemas/Build'
      required:
        - event_name
        - project
        - build

    NoteEvent:
      type: object
      properties:
        event_name:
          type: string
          enum: [note]
        project:
          $ref: '#/components/schemas/Project'
        note:
          $ref: '#/components/schemas/Note'
      required:
        - event_name
        - project
        - note

    IssueEvent:
      type: object
      properties:
        event_name:
          type: string
          enum: [issue]
        project:
          $ref: '#/components/schemas/Project'
        issue:
          $ref: '#/components/schemas/Issue'
      required:
        - event_name
        - project
        - issue

    # Project Webhook Event Schemas
    ProjectPushEvent:
      type: object
      properties:
        object_kind:
          type: string
          enum: [push]
        ref:
          type: string
          description: Git reference (e.g., refs/heads/main)
        commits:
          type: array
          items:
            $ref: '#/components/schemas/Commit'
        project:
          $ref: '#/components/schemas/Project'
      required:
        - object_kind
        - ref
        - commits
        - project

    ProjectMergeRequestEvent:
      type: object
      properties:
        object_kind:
          type: string
          enum: [merge_request]
        object_attributes:
          $ref: '#/components/schemas/MergeRequestAttributes'
        project:
          $ref: '#/components/schemas/Project'
      required:
        - object_kind
        - object_attributes
        - project

    ProjectIssueEvent:
      type: object
      properties:
        object_kind:
          type: string
          enum: [issue]
        object_attributes:
          $ref: '#/components/schemas/IssueAttributes'
        project:
          $ref: '#/components/schemas/Project'
      required:
        - object_kind
        - object_attributes
        - project

    ProjectNoteEvent:
      type: object
      properties:
        object_kind:
          type: string
          enum: [note]
        object_attributes:
          $ref: '#/components/schemas/NoteAttributes'
        project:
          $ref: '#/components/schemas/Project'
      required:
        - object_kind
        - object_attributes
        - project

    ProjectPipelineEvent:
      type: object
      properties:
        object_kind:
          type: string
          enum: [pipeline]
        object_attributes:
          $ref: '#/components/schemas/PipelineAttributes'
        project:
          $ref: '#/components/schemas/Project'
      required:
        - object_kind
        - object_attributes
        - project

    ProjectBuildEvent:
      type: object
      properties:
        object_kind:
          type: string
          enum: [build]
        object_attributes:
          $ref: '#/components/schemas/BuildAttributes'
        project:
          $ref: '#/components/schemas/Project'
      required:
        - object_kind
        - object_attributes
        - project

    ProjectTagPushEvent:
      type: object
      properties:
        object_kind:
          type: string
          enum: [tag_push]
        ref:
          type: string
          description: Git reference (e.g., refs/tags/v1.0.0)
        commits:
          type: array
          items:
            $ref: '#/components/schemas/Commit'
        project:
          $ref: '#/components/schemas/Project'
      required:
        - object_kind
        - ref
        - commits
        - project

    ProjectReleaseEvent:
      type: object
      properties:
        object_kind:
          type: string
          enum: [release]
        project:
          $ref: '#/components/schemas/Project'
        release:
          $ref: '#/components/schemas/Release'
      required:
        - object_kind
        - project
        - release

    ProjectDeploymentEvent:
      type: object
      properties:
        object_kind:
          type: string
          enum: [deployment]
        project:
          $ref: '#/components/schemas/Project'
        deployment:
          $ref: '#/components/schemas/Deployment'
      required:
        - object_kind
        - project
        - deployment

    ProjectFeatureFlagEvent:
      type: object
      properties:
        object_kind:
          type: string
          enum: [feature_flag]
        project:
          $ref: '#/components/schemas/Project'
        feature_flag:
          $ref: '#/components/schemas/FeatureFlag'
      required:
        - object_kind
        - project
        - feature_flag

    ProjectWikiPageEvent:
      type: object
      properties:
        object_kind:
          type: string
          enum: [wiki_page]
        project:
          $ref: '#/components/schemas/Project'
        wiki_page:
          $ref: '#/components/schemas/WikiPage'
      required:
        - object_kind
        - project
        - wiki_page

    # System Hook Event Schemas (Additional)
    ConfidentialNoteEvent:
      type: object
      properties:
        event_name:
          type: string
          enum: [confidential_note]
        object_attributes:
          $ref: '#/components/schemas/NoteAttributes'
        project:
          $ref: '#/components/schemas/Project'
      required:
        - event_name
        - object_attributes
        - project

    ConfidentialIssueEvent:
      type: object
      properties:
        event_name:
          type: string
          enum: [confidential_issue]
        object_attributes:
          $ref: '#/components/schemas/IssueAttributes'
        project:
          $ref: '#/components/schemas/Project'
      required:
        - event_name
        - object_attributes
        - project

    SubgroupEvent:
      type: object
      properties:
        event_name:
          type: string
          enum: [subgroup_create, subgroup_destroy, subgroup_rename]
        group:
          $ref: '#/components/schemas/Group'
        subgroup:
          $ref: '#/components/schemas/Group'
      required:
        - event_name
        - group
        - subgroup

    SnippetEvent:
      type: object
      properties:
        event_name:
          type: string
          enum: [snippet_create, snippet_update, snippet_destroy]
        project:
          $ref: '#/components/schemas/Project'
        snippet:
          $ref: '#/components/schemas/Snippet'
      required:
        - event_name
        - project
        - snippet

    ProjectRenameEvent:
      type: object
      properties:
        event_name:
          type: string
          enum: [project_rename]
        project:
          $ref: '#/components/schemas/Project'
        old_path_with_namespace:
          type: string
          description: Previous project path with namespace
        new_path_with_namespace:
          type: string
          description: New project path with namespace
      required:
        - event_name
        - project
        - old_path_with_namespace
        - new_path_with_namespace

    ProjectTransferEvent:
      type: object
      properties:
        event_name:
          type: string
          enum: [project_transfer]
        project:
          $ref: '#/components/schemas/Project'
        old_namespace:
          $ref: '#/components/schemas/Namespace'
        new_namespace:
          $ref: '#/components/schemas/Namespace'
      required:
        - event_name
        - project
        - old_namespace
        - new_namespace

    UserUpdateEvent:
      type: object
      properties:
        event_name:
          type: string
          enum: [user_update]
        user:
          $ref: '#/components/schemas/User'
        changes:
          type: object
          description: Changed user attributes
          properties:
            name:
              type: string
            email:
              type: string
            username:
              type: string
      required:
        - event_name
        - user
        - changes

    GroupRenameEvent:
      type: object
      properties:
        event_name:
          type: string
          enum: [group_rename]
        group:
          $ref: '#/components/schemas/Group'
        old_path:
          type: string
          description: Previous group path
        new_path:
          type: string
          description: New group path
      required:
        - event_name
        - group
        - old_path
        - new_path

    KeyCreateEvent:
      type: object
      properties:
        event_name:
          type: string
          enum: [key_create]
        key:
          $ref: '#/components/schemas/SSHKey'
        user:
          $ref: '#/components/schemas/User'
      required:
        - event_name
        - key
        - user

    KeyDestroyEvent:
      type: object
      properties:
        event_name:
          type: string
          enum: [key_destroy]
        key:
          $ref: '#/components/schemas/SSHKey'
        user:
          $ref: '#/components/schemas/User'
      required:
        - event_name
        - key
        - user

    GroupMemberAddEvent:
      type: object
      properties:
        event_name:
          type: string
          enum: [group_member_add]
        group:
          $ref: '#/components/schemas/Group'
        user:
          $ref: '#/components/schemas/User'
        access_level:
          type: integer
          description: Access level of the user
      required:
        - event_name
        - group
        - user
        - access_level

    GroupMemberRemoveEvent:
      type: object
      properties:
        event_name:
          type: string
          enum: [group_member_remove]
        group:
          $ref: '#/components/schemas/Group'
        user:
          $ref: '#/components/schemas/User'
      required:
        - event_name
        - group
        - user

    # Project Webhook Event Schemas (Additional)
    ProjectConfidentialNoteEvent:
      type: object
      properties:
        object_kind:
          type: string
          enum: [confidential_note]
        object_attributes:
          $ref: '#/components/schemas/NoteAttributes'
        project:
          $ref: '#/components/schemas/Project'
      required:
        - object_kind
        - object_attributes
        - project

    ProjectConfidentialIssueEvent:
      type: object
      properties:
        object_kind:
          type: string
          enum: [confidential_issue]
        object_attributes:
          $ref: '#/components/schemas/IssueAttributes'
        project:
          $ref: '#/components/schemas/Project'
      required:
        - object_kind
        - object_attributes
        - project

    ProjectSubgroupEvent:
      type: object
      properties:
        object_kind:
          type: string
          enum: [subgroup_create, subgroup_destroy, subgroup_rename]
        group:
          $ref: '#/components/schemas/Group'
        subgroup:
          $ref: '#/components/schemas/Group'
      required:
        - object_kind
        - group
        - subgroup

    ProjectSnippetEvent:
      type: object
      properties:
        object_kind:
          type: string
          enum: [snippet_create, snippet_update, snippet_destroy]
        project:
          $ref: '#/components/schemas/Project'
        snippet:
          $ref: '#/components/schemas/Snippet'
      required:
        - object_kind
        - project
        - snippet

    # Additional Common Schemas
    Snippet:
      type: object
      properties:
        id:
          type: integer
          description: Snippet ID
        title:
          type: string
          description: Snippet title
        content:
          type: string
          description: Snippet content
        visibility_level:
          type: integer
          description: Visibility level (0=private, 10=internal, 20=public)
        url:
          type: string
          format: uri
          description: Snippet URL
      required:
        - id
        - title
        - content

    Namespace:
      type: object
      properties:
        id:
          type: integer
          description: Namespace ID
        name:
          type: string
          description: Namespace name
        path:
          type: string
          description: Namespace path
      required:
        - id
        - name
        - path

    SSHKey:
      type: object
      properties:
        id:
          type: integer
          description: SSH key ID
        title:
          type: string
          description: SSH key title
        key:
          type: string
          description: SSH public key
        created_at:
          type: string
          format: date-time
          description: Key creation timestamp
      required:
        - id
        - title
        - key
        - created_at

tags:
  - name: System Hooks
    description: GitLab System Hook endpoints
  - name: Project Webhooks
    description: GitLab Project Webhook endpoints
  - name: Health & Monitoring
    description: Health check and monitoring endpoints
  - name: Cache Management
    description: Cache system management endpoints
  - name: Configuration Management
    description: Configuration management endpoints
  - name: Performance Monitoring
    description: Performance metrics and monitoring endpoints
