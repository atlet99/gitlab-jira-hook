name: Security Scanning

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
    branches:
      - main
  branch_protection_rule:
  schedule:
    - cron: "20 7 * * 2"

permissions:
  contents: read

jobs:
  trivy_scan:
    name: Trivy Security Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          disable-sudo: true
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@dc5a429b52fcf669ce959baa2c2dd26090d2a6c4 # 0.32.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          severity: 'CRITICAL,HIGH'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@4e828ff8d448a8a6e532957b1811f387a63867e8 # v3.29.4
        with:
          sarif_file: 'trivy-results.sarif'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  nancy_check:
    name: Nancy Vulnerability Check
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          disable-sudo: true
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Get Go Version
        run: |
          #!/bin/bash
          GOVERSION=$({ [ -f .go-version ] && cat .go-version; })
          echo "GOVERSION=$GOVERSION" >> $GITHUB_ENV

      - name: Setup Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: ${{ env.GOVERSION }}

      - name: WriteGoList
        run: go list -json -m all > go.list

      - name: Nancy
        uses: sonatype-nexus-community/nancy-github-action@726e338312e68ecdd4b4195765f174d3b3ce1533 # v1.0.3
        with:
          nancyVersion: "v1.0.48"
          nancyCommand: sleuth --loud

  ossf_scorecard:
    name: OpenSSF Scorecard
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      id-token: write
      contents: read
      actions: read
      issues: read
      pull-requests: read
      checks: read
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Run analysis
        uses: ossf/scorecard-action@05b42c624433fc40578a4040d5cf5e36ddca8cde # v2.4.2
        with:
          results_file: results.sarif
          results_format: sarif
          publish_results: true

      - name: Upload artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: SARIF file
          path: results.sarif
          retention-days: 5

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@4e828ff8d448a8a6e532957b1811f387a63867e8 # v3.29.4
        with:
          sarif_file: results.sarif

  gosec_scan:
    name: Gosec Security Scanner
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          disable-sudo: true
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Get Go Version
        run: |
          #!/bin/bash
          GOVERSION=$({ [ -f .go-version ] && cat .go-version; })
          echo "GOVERSION=$GOVERSION" >> $GITHUB_ENV

      - name: Setup Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: ${{ env.GOVERSION }}

      - name: Install gosec
        run: |
          go install github.com/securego/gosec/v2/cmd/gosec@v2.22.5

      - name: Run gosec Security Scanner
        run: |
          if [ -f .gosec.json ]; then
            gosec -conf .gosec.json -fmt sarif -out gosec-results.sarif -no-fail ./...
          else
            gosec -fmt sarif -out gosec-results.sarif -severity medium -no-fail ./...
          fi

      - name: Upload gosec scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@4e828ff8d448a8a6e532957b1811f387a63867e8 # v3.29.4
        with:
          sarif_file: gosec-results.sarif
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload gosec report as artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: gosec-security-report
          path: gosec-results.sarif
          retention-days: 30

  govulncheck_scan:
    name: Govulncheck Vulnerability Scanner
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          disable-sudo: true
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Get Go Version
        run: |
          #!/bin/bash
          GOVERSION=$({ [ -f .go-version ] && cat .go-version; })
          echo "GOVERSION=$GOVERSION" >> $GITHUB_ENV

      - name: Setup Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: ${{ env.GOVERSION }}
          cache: true

      - name: Install govulncheck
        run: go install golang.org/x/vuln/cmd/govulncheck@v1.1.4

      - name: Run govulncheck vulnerability scanner
        run: |
          govulncheck -json ./... > vulncheck-results.json || echo "Vulnerabilities found, check report"

      - name: Upload govulncheck results as artifact
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: govulncheck-vulnerability-report
          path: vulncheck-results.json
          retention-days: 30

  syft_sbom:
    name: Syft SBOM Generation
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          disable-sudo: true
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Generate SBOM (SPDX JSON)
        uses: anchore/sbom-action@7b36ad622f042cab6f59a75c2ac24ccb256e9b45 # v0.20.4
        with:
          artifact-name: sbom-spdx.json
          format: spdx-json
          upload-artifact: true
          upload-artifact-retention: 90
          upload-release-assets: true
          dependency-snapshot: true

      - name: Generate SBOM (CycloneDX JSON)
        uses: anchore/sbom-action@7b36ad622f042cab6f59a75c2ac24ccb256e9b45 # v0.20.4
        with:
          artifact-name: sbom-cyclonedx.json
          format: cyclonedx-json
          upload-artifact: true
          upload-artifact-retention: 90
          upload-release-assets: true

      - name: Generate SBOM (Syft JSON)
        uses: anchore/sbom-action@7b36ad622f042cab6f59a75c2ac24ccb256e9b45 # v0.20.4
        with:
          artifact-name: sbom-syft.json
          format: syft-json
          output-file: sbom.syft.json
          upload-artifact: true
          upload-artifact-retention: 90
          upload-release-assets: true

      - name: Display SBOM summary
        run: |
          echo "## SBOM Generation Summary" >> $GITHUB_STEP_SUMMARY
          echo "Generated Software Bill of Materials using anchore/sbom-action:" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… SPDX JSON format: sbom-spdx.json" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… CycloneDX JSON format: sbom-cyclonedx.json" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Syft JSON format: sbom-syft.json" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Features" >> $GITHUB_STEP_SUMMARY
          echo "- ðŸ“¦ Automatic artifact upload to workflow" >> $GITHUB_STEP_SUMMARY
          echo "- ðŸš€ Automatic release asset upload" >> $GITHUB_STEP_SUMMARY
          echo "- ðŸ”’ 90-day artifact retention" >> $GITHUB_STEP_SUMMARY
          echo "- ðŸ“Š Multiple SBOM formats for compatibility" >> $GITHUB_STEP_SUMMARY
          echo "- ðŸ”— GitHub Dependency Graph integration (SPDX format)" >> $GITHUB_STEP_SUMMARY
          echo "- âš¡ Official anchore/sbom-action for reliable SBOM generation" >> $GITHUB_STEP_SUMMARY 