# =============================================================================
# GitLab â†” Jira Cloud Webhook Configuration
# =============================================================================

# Server Configuration
# -----------------------------------------------------------------------------
# Port for the webhook server to listen on
PORT=8080

# Log level: debug, info, warn, error
# Use debug for development, info for production
LOG_LEVEL=info

# Timezone for date formatting and container (e.g., Etc/GMT-5, Asia/Almaty, UTC)
# This affects all date/time output in logs, Jira comments, and container time
TIMEZONE=Etc/GMT-5

# GitLab Configuration
# -----------------------------------------------------------------------------
# Secret token for validating GitLab webhook requests
# Must match the token configured in GitLab webhook settings
GITLAB_SECRET=your-gitlab-secret-token

# Base URL of your GitLab instance
# For gitlab.com use: https://gitlab.com
# For self-hosted GitLab use your instance URL
GITLAB_BASE_URL=https://gitlab.com

# Event Filtering (Optional)
# -----------------------------------------------------------------------------
# Comma-separated list of allowed GitLab projects
# Format: group/project,another-group/another-project
# Leave empty to allow all projects
ALLOWED_PROJECTS=my-org/my-project,another-org/another-project

# Comma-separated list of allowed GitLab groups
# Format: group1,group2,group3
# Leave empty to allow all groups
ALLOWED_GROUPS=my-org,another-org

# Push event branch filter (comma-separated, supports * and ? wildcards)
# Examples:
#   main,develop                    # Only main and develop branches
#   main,release-*                  # Main and all release branches
#   main,develop,hotfix/*           # Main, develop, and all hotfix branches
#   *                               # All branches (default behavior)
#   main,release-*,hotfix/*,feature/??-*  # Complex patterns
# Leave empty to allow all branches
PUSH_BRANCH_FILTER=main,release-*,hotfix/*

# Jira Configuration
# -----------------------------------------------------------------------------
# Email address associated with your Jira account
JIRA_EMAIL=your-email@company.com

# API token for Jira authentication
# Generate at: https://id.atlassian.com/manage-profile/security/api-tokens
JIRA_TOKEN=your-jira-api-token

# Base URL of your Jira Cloud instance
# Format: https://yourcompany.atlassian.net
JIRA_BASE_URL=https://yourcompany.atlassian.net

# Rate limiting for Jira API calls (requests per second)
# Recommended: 10 for most cases, adjust based on your Jira plan
JIRA_RATE_LIMIT=10

# Maximum number of retry attempts for failed Jira API calls
JIRA_RETRY_MAX_ATTEMPTS=3

# Base delay between retry attempts in milliseconds
# Will be exponentially increased for each retry
JIRA_RETRY_BASE_DELAY_MS=200

# =============================================================================
# Queue and Throughput Configuration
# =============================================================================

# Legacy Worker Pool Configuration (for backward compatibility)
# -----------------------------------------------------------------------------
# Number of workers in the pool (legacy, use MIN_WORKERS/MAX_WORKERS instead)
WORKER_POOL_SIZE=10

# Size of the job queue (legacy, use new queue configuration instead)
JOB_QUEUE_SIZE=100

# New Priority Queue Configuration
# -----------------------------------------------------------------------------
# Minimum number of workers in the pool
MIN_WORKERS=2

# Maximum number of workers in the pool
MAX_WORKERS=32

# Queue length above which the pool will scale up
SCALE_UP_THRESHOLD=10

# Queue length below which the pool will scale down
SCALE_DOWN_THRESHOLD=2

# Interval (in seconds) between scaling checks
SCALE_INTERVAL=10

# Rate Limiting and Throughput
# -----------------------------------------------------------------------------
# Maximum concurrent jobs processing
MAX_CONCURRENT_JOBS=50

# Timeout for individual job processing (seconds)
JOB_TIMEOUT_SECONDS=30

# Timeout for queue operations (milliseconds)
QUEUE_TIMEOUT_MS=5000

# Retry and Backoff Configuration
# -----------------------------------------------------------------------------
# Maximum retry attempts for failed jobs
MAX_RETRIES=3

# Base delay between retries (milliseconds)
RETRY_DELAY_MS=1000

# Exponential backoff multiplier
BACKOFF_MULTIPLIER=2.0

# Maximum backoff delay (milliseconds)
MAX_BACKOFF_MS=30000

# Monitoring and Health
# -----------------------------------------------------------------------------
# Enable metrics collection
METRICS_ENABLED=true

# Health check interval (seconds)
HEALTH_CHECK_INTERVAL=30

# =============================================================================
# Configuration Examples
# =============================================================================

# Example 1: Basic setup for gitlab.com and Jira Cloud
# PORT=8080
# TIMEZONE=Etc/GMT-5
# GITLAB_SECRET=my-secret-token
# GITLAB_BASE_URL=https://gitlab.com
# JIRA_EMAIL=john.doe@company.com
# JIRA_TOKEN=my-jira-api-token
# JIRA_BASE_URL=https://mycompany.atlassian.net
# LOG_LEVEL=info

# Example 2: Self-hosted GitLab with filtering and high throughput
# PORT=8080
# TIMEZONE=Asia/Almaty
# GITLAB_SECRET=my-secret-token
# GITLAB_BASE_URL=https://gitlab.mycompany.com
# JIRA_EMAIL=john.doe@company.com
# JIRA_TOKEN=my-jira-api-token
# JIRA_BASE_URL=https://mycompany.atlassian.net
# ALLOWED_PROJECTS=engineering/backend,engineering/frontend
# ALLOWED_GROUPS=engineering,qa
# PUSH_BRANCH_FILTER=main,develop,release-*
# MIN_WORKERS=5
# MAX_WORKERS=50
# MAX_CONCURRENT_JOBS=100
# LOG_LEVEL=info

# Example 3: Production setup with strict filtering and monitoring
# PORT=8080
# TIMEZONE=UTC
# GITLAB_SECRET=production-secret-token
# GITLAB_BASE_URL=https://gitlab.com
# JIRA_EMAIL=webhook@company.com
# JIRA_TOKEN=production-jira-token
# JIRA_BASE_URL=https://company.atlassian.net
# JIRA_RATE_LIMIT=5
# JIRA_RETRY_MAX_ATTEMPTS=5
# JIRA_RETRY_BASE_DELAY_MS=500
# ALLOWED_PROJECTS=company/production-app
# PUSH_BRANCH_FILTER=main,hotfix/*
# MIN_WORKERS=10
# MAX_WORKERS=100
# MAX_CONCURRENT_JOBS=200
# METRICS_ENABLED=true
# HEALTH_CHECK_INTERVAL=15
# LOG_LEVEL=warn

# Example 4: High-load environment with aggressive scaling
# PORT=8080
# TIMEZONE=Etc/GMT-5
# GITLAB_SECRET=highload-secret-token
# GITLAB_BASE_URL=https://gitlab.com
# JIRA_EMAIL=webhook@company.com
# JIRA_TOKEN=highload-jira-token
# JIRA_BASE_URL=https://company.atlassian.net
# JIRA_RATE_LIMIT=20
# MIN_WORKERS=20
# MAX_WORKERS=200
# SCALE_UP_THRESHOLD=5
# SCALE_DOWN_THRESHOLD=1
# SCALE_INTERVAL=5
# MAX_CONCURRENT_JOBS=500
# JOB_TIMEOUT_SECONDS=60
# MAX_RETRIES=5
# RETRY_DELAY_MS=500
# BACKOFF_MULTIPLIER=1.5
# METRICS_ENABLED=true
# HEALTH_CHECK_INTERVAL=10
# LOG_LEVEL=info 